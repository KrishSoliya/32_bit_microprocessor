module testbench_pipe_MIPS32;
    reg clk1, clk2;
    integer k;

    // Instantiate the processor
    pipe_MIPS32 processor(clk1, clk2);

    initial begin
        clk1 = 0;
        clk2 = 0;
        repeat(20) begin
            #5 clk1 = ~clk1;
            #5 clk2 = ~clk2;
        end
    end

    initial begin
        for (k = 0; k < 31; k = k + 1) begin
            processor.Reg[k] = k;
        end
        processor.Mem[0] = 32'b001010_00000_00001_0000000000000101; // ADDI R1, R0, 5
        processor.Mem[1] = 32'b001010_00001_00010_0000000000000011; // ADDI R2, R1, 3
        processor.Mem[2] = 32'b000000_00001_00010_00011_00000_100000; // ADD R3, R1, R2
        processor.Mem[3] = 32'b111111_00000_00000_00000_00000_000000; // HALT

        processor.PC = 0;
        processor.HALTED = 0;
        processor.TAKEN_BRANCH = 0;

        #500 $finish;
    end

    initial begin
        $dumpfile("pipeline.vcd");
        $dumpvars(0, testbench_pipe_MIPS32);
    end
endmodule
